# ------------------------------------------------------------------------------
# Project Euler - Problem 029 - Distinct powers
# ------------------------------------------------------------------------------
# Problem Link: https://projecteuler.net/problem=029
# ------------------------------------------------------------------------------
# Author: Paul Frisby
# Email: mail@paulfrisby.com
# Github: https://github.com/paulfrisby/
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Problem Definition
# ------------------------------------------------------------------------------
"""
Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    2^2=4,  2^3=8,   2^4=16,  2^5 =    32
    3^2=9,  3^3=27,  3^4=81,  3^5 =   243
    4^2=16, 4^3=64,  4^4=256, 4^5 = 1,024
    5^2=25, 5^3=125, 5^4=625, 5^5 = 3,125

If they are then placed in numerical order, with any repeats removed, we get
the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100
and 2 ≤ b ≤ 100?
"""
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Main Code
# ------------------------------------------------------------------------------

# returns a set of all the possible values of a^b where 1 < a,b <= aLimit,bLimit 
def powerSet(aLimit, bLimit): 
    powers = []
    for a in range(2, aLimit + 1):
        for b in range(2, bLimit + 1):
            powers.append(a**b)

    # cast powers to a set before returning, so repeat values are removed
    return set(powers)

print (len(powerSet(100, 100)))
